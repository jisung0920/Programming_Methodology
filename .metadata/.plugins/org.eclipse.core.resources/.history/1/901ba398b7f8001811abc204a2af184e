package BankSystems;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import BankObjects.Account;
import BankObjects.Bank;
import BankObjects.Customer;
import BankObjects.Manager;
import BankPanelUI.customerMain;
import BankPanelUI.loginWindow;
import BankPanelUI.managerMain;
import BankPanelUI.startBanking;

public class BankSystemController {

	private BankView view;
	private Manager bankManager;
	private int usingCustomer,usingAccount;
	
	public BankSystemController(BankView view, Manager manager) {
		this.view  = view;
		this.bankManager = manager;
		usingCustomer=0;
		usingAccount =0;

	}
	public void processBanking() {
		startBanking start = new startBanking();
		setStartBanking(start);

		view.attachPanel(start);
//		view.setLogin();
	}
	
	public void setStartBanking(startBanking panel) {
		this.view.setStart(panel);
		panel.valueSetting();
		panel.viewSetting();
		panel.addToPanel();
		panel.getCreateBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				String bankName = panel.getBankName().getText();
				view.setTitle(bankName);
				bankManager.makeBank(bankName);
				setLoginWindow(new loginWindow());
				view.goTologin();
			}
		});	
	}
	public void setLoginWindow(loginWindow panel) {
		this.view.setLogin(panel);
		panel.valueSetting();
		panel.viewSetting();
		panel.addToPanel();
		panel.getcLoginBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				Bank bank = bankManager.getBank();
				ArrayList<Customer> customer = bank.getCustomers();
				String id,pw;
				id = panel.getCustomerId().getText();
				pw = panel.getCustomerPw().getText();

				for(int i=0;i<customer.size();i++) {
					if(customer.get(i).identifyCustomer(id, pw)) {
						setCustomerMain(new customerMain());
						usingCustomer = i;
						view.goTocustom();
						return ;
					}
				}
				JOptionPane.showMessageDialog(panel, "아이디와 패스워드를 확인하세요.","로그인 실패",JOptionPane.WARNING_MESSAGE);
				
//				bank.hasId(id)
				
			}
		});
		
		panel.getNewCustomerBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				Bank bank = bankManager.getBank();
				String id =view.getLogin().getCustomerId().getText();
				String pw = view.getLogin().getCustomerPw().getText();
				String name = view.getLogin().getCustomerName().getText();
				System.out.println(id.length()+""+pw.length());
				if(id.length()<4 || pw.length()<4) {
					System.out.println("whier");
					JOptionPane.showMessageDialog(panel, "아이디와 패스워드는 4자 이상으로 설정해주세요. ","가입 실패",JOptionPane.WARNING_MESSAGE);

				}
				else if(!InputProcesser.isString(name)) {
					JOptionPane.showMessageDialog(panel, "이름은 문자로만 구성되어야 합니다. ","가입 실패",JOptionPane.WARNING_MESSAGE);
				}
				else {
					JOptionPane.showMessageDialog(panel, name+"님 회원가입이 되었습니다.","가입 성공",JOptionPane.PLAIN_MESSAGE);
					Customer customer = new Customer(id,pw,name);
					bank.getCustomers().add(customer);
				}
			}
		});
		
		panel.getmLoginBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String id = panel.getManagerId().getText();
				String pw = panel.getManagerPw().getText();
				if(bankManager.login(id, pw)) {
					setManagerMain(new managerMain());
					view.goTomanage();
				}
				else
					JOptionPane.showMessageDialog(panel, "아이디와 패스워드를 확인하세요.","관리자 로그인 실패",JOptionPane.WARNING_MESSAGE);
				
			}
		});
	}
	public void setManagerMain(managerMain panel) {
		this.view.setManage(panel);
		panel.valueSetting(this.bankManager.getBank());
		panel.viewSetting();
		panel.addToPanel();
		
		panel.getSettingBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				int charge = Integer.parseInt(panel.getChargeValue().getText());
				float interest = Float.parseFloat(panel.getInterestValue().getText());
				bankManager.getBank().setCharge(charge);
				bankManager.getBank().setInterest(interest);
			}
		});
		panel.getBackBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				view.goTologin();
			}
		});
	}

	public void setCustomerMain(customerMain panel) {
		this.view.setCustom(panel);
		panel.valueSetting(bankManager.getBank().getCustomers().get(usingCustomer));
		panel.viewSetting();
		panel.addToPanel();
		panel.getBackBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				view.goTologin();
			}
		});
		panel.getCreateAccountBtn().addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				Customer customer = bankManager.getBank().getCustomers().get(usingCustomer);
				String id = customer.getName()+(customer.getNumAccount()+1);
				customer.getAccounts().add(new Account(id));
				
				JOptionPane.showMessageDialog(panel, id+" 이름의 계좌가 생성되었습니다. ","계좌 생성 ",JOptionPane.PLAIN_MESSAGE);
				view.goTologin();
				view.goTocustom();
			}
		});
		
	}

}
